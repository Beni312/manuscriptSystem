<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1473782106000</longProp>
        <longProp name="ThreadGroup.end_time">1473782106000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Academic Disciplines Manager" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/online-web/registration/addAcademicDisciplines" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot; : [&#xd;
  {&#xd;
    &quot;id&quot;: &quot;01&quot;,&#xd;
    &quot;name&quot;: &quot;Arts&quot;,&#xd;
    &quot;nodes&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0101&quot;,&#xd;
        &quot;name&quot;: &quot;Performing_arts&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0102&quot;,&#xd;
        &quot;name&quot;: &quot;Visual_arts&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;id&quot;: &quot;02&quot;,&#xd;
    &quot;name&quot;: &quot;Humanities&quot;,&#xd;
    &quot;nodes&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0201&quot;,&#xd;
        &quot;name&quot;: &quot;Geography&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0202&quot;,&#xd;
        &quot;name&quot;: &quot;History&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0203&quot;,&#xd;
        &quot;name&quot;: &quot;Languages_and_literature&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0204&quot;,&#xd;
        &quot;name&quot;: &quot;Philosophy&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;id&quot;: &quot;03&quot;,&#xd;
    &quot;name&quot;: &quot;Social_sciences&quot;,&#xd;
    &quot;nodes&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0301&quot;,&#xd;
        &quot;name&quot;: &quot;Economics&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0302&quot;,&#xd;
        &quot;name&quot;: &quot;Law&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0303&quot;,&#xd;
        &quot;name&quot;: &quot;Political_science&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0304&quot;,&#xd;
        &quot;name&quot;: &quot;Psychology&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0305&quot;,&#xd;
        &quot;name&quot;: &quot;Sociology&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;id&quot;: &quot;04&quot;,&#xd;
    &quot;name&quot;: &quot;Sciences&quot;,&#xd;
    &quot;nodes&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0401&quot;,&#xd;
        &quot;name&quot;: &quot;Biology&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0402&quot;,&#xd;
        &quot;name&quot;: &quot;Chemistry&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0403&quot;,&#xd;
        &quot;name&quot;: &quot;Earth_and_space_sciences&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0404&quot;,&#xd;
        &quot;name&quot;: &quot;Mathematics&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0405&quot;,&#xd;
        &quot;name&quot;: &quot;Physics&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  {&#xd;
    &quot;id&quot;: &quot;05&quot;,&#xd;
    &quot;name&quot;: &quot;Technology&quot;,&#xd;
    &quot;nodes&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0501&quot;,&#xd;
        &quot;name&quot;: &quot;Agronomy&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0502&quot;,&#xd;
        &quot;name&quot;: &quot;Computer_science&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0503&quot;,&#xd;
        &quot;name&quot;: &quot;Engineering&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;0504&quot;,&#xd;
        &quot;name&quot;: &quot;Medicine&quot;,&#xd;
        &quot;nodes&quot;: [&#xd;
          &#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
]&#xd;
	}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/admin-web/academicdisciplines/manage</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
